PORT=5000
MONGODB_URI=mongodb+srv://devalauddinjahin:FClcszk5vk6foqGw@cluster0.ugpylmr.mongodb.net
JWT_SECRET=8e52d26f2404502a70b93fc2739070e0d239506a254eacc19c3a7a4f22ca5591 #openssl rand -hex 32
NODE_ENV=development

FRONTEND_URL=http://localhost:3000
API_VERSION=v1
REDIS_HOST=172.28.30.15

# Test-Driven Development: ( red, green and refactor)

# git add .
# git commit -m "feat: add comprehensive testing and QA suite

# - Add Jest for unit testing
# - Add Supertest for integration testing  
# - Add Playwright for E2E testing
# - Add ESLint and Prettier for code quality
# - Add Husky for git hooks
# - Add GitHub Actions CI/CD pipeline
# - Add comprehensive test coverage setup"


#  Final Pro Tips
# 1. Test-Driven Development

# Write tests before implementing features
# Use npm run test:watch during development

# 2. Code Quality

# Run npm run lint:fix before committing
# Use npm run format to maintain consistent style

# 3. CI/CD Best Practices

# All tests must pass before merging
# Maintain high test coverage (>80%)
# Use semantic commit messages

# 4. Performance Monitoring

# Add performance tests to E2E suite
# Monitor test execution time
# Use test parallelization for faster runs

# 5. Documentation

# Update README with testing instructions
# Document test patterns and conventions
# Add JSDoc comments for complex functions


# ðŸ†˜ Troubleshooting Common Issues
# Issue: Tests fail with "Cannot find module"
# Solution: Check file paths in test imports and ensure they match your project structure.
# Issue: Playwright tests timeout
# Solution: Increase timeout in playwright.config.js or ensure your server starts properly.
# Issue: Coverage threshold not met
# Solution: Add more tests or adjust thresholds in jest.config.js.
# Issue: Git hooks not working
# Solution: Run npm run prepare and ensure Husky is properly installed.